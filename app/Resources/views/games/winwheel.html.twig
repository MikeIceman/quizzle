{% extends 'base.html.twig' %}

{% block body %}
<div class="row">
    <div class="col">
        <section class="card">
            <div class="card-body" id="LoadingOverlay" data-loading-overlay data-loading-overlay-options='{ "startShowing": true }'>
                <div style="width:384px;height:405px;position:relative;" class="m-auto">
                    <canvas id="canvas" width="384" height="384" style="position:absolute;top:21px;">
                        <p style="{color: white}" align="center">Sorry, your browser doesn't support canvas. Please try another.</p>
                    </canvas>
                    <img src="{{ asset('images/wheel.png') }}" style="position:absolute;top:0;left:0;width:100%;height:100%;"/>
                </div>
                <div class="row mt-2 text-center">
                    <input type="button" href="#" class="btn btn-default m-auto" title="Крутить колесо!" id="spin-button" value="Крутить колесо!" />
                </div>
                <!-- Modal Animation -->
                <div id="modalAnim" class="zoom-anim-dialog modal-block modal-block-warning mfp-hide">
                    <section class="card">
                        <header class="card-header">
                            <h2 class="card-title">Поздравляем!</h2>
                        </header>
                        <div class="card-body">
                            <div class="modal-wrapper" id="ModalContent">

                            </div>
                        </div>
                        <footer class="card-footer">
                            <div class="row">
                                <div class="col-md-12 text-center">
                                    <button class="btn btn-success modal-confirm">Забрать приз</button>
                                    <button class="btn btn-danger modal-dismiss">Отказаться</button>
                                </div>
                            </div>
                        </footer>
                    </section>
                </div>
            </div>
        </section>
    </div>
</div>
<h2 class="text-center mt-4 mb-2">Суперпризы</h2>
<div class="row">
    {% for prize in prizes %}
    <div class="col-lg-4 col-xl-4">
        <section class="card">
            <header class="card-header bg-warning">
                <div class="card-header-profile-picture">
                    <img src="{{ prize.image }}" alt="{{ prize.title }}">
                </div>
            </header>
            <div class="card-body">
                <h3 class="mt-0 font-weight-semibold mt-0 text-center">{{ prize.title }}</h3>
                <p>{{ prize.description }}</p>
            </div>
        </section>
    </div>
    {% endfor %}
</div>
{% endblock %}

{% block breadcrumbs %}
    <header class="page-header">
        <h2>Колесо фортуны</h2>

        <div class="right-wrapper text-right pr-5">
            <ol class="breadcrumbs">
                <li>
                    <a href="{{ path('homepage') }}" title="Главная страница">
                        <i class="fas fa-home"></i>
                    </a>
                </li>
                <li><a href="{{ path('games') }}">Игры</a></li>
            </ol>
        </div>
    </header>
{% endblock %}

{% block title %}Колесо фортуны{% endblock %}

{% block javascripts %}
    <script src="/vendor/winwheel-2.7.0/Winwheel.min.js"></script>
    <!-- Bad practice, I know, to trust external sources ¯\_(ツ)_/¯ -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/latest/TweenMax.min.js"></script>
    <script>
        (function($) {

            'use strict';

            var theWheel;
            var wheelSpinning = false;
            var spinId = null;

            Number.prototype.pad = function(size) {
                var s = String(this);
                while (s.length < (size || 2)) {s = "0" + s;}
                return s;
            }

            var countdownInit = function(date) {
                var date = (typeof date != 'undefined' && date) ? date : "10/01/2018 20:06:00";
                var countDownDate = new Date(date).getTime();
                var $button = $('#spin-button');
                var x = setInterval(function() {
                    var now = new Date().getTime();
                    var distance = countDownDate - now;
                    var days = Math.floor(distance / (1000 * 60 * 60 * 24));
                    var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                    var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                    var seconds = Math.floor((distance % (1000 * 60)) / 1000);

                    if (distance < 0) {
                        clearInterval(x);
                        wheelInit();
                        $button.removeAttr('disabled').val('Крутить колесо!');
                    }
                    else
                    {
                        $button.attr("disabled", true).val("Следующая попытка через "+hours.pad(2) + ":" + minutes.pad(2) + ":" + seconds.pad(2))
                    }
                }, 1000);
            };

            var wheelInit = function(segments){
                $('#LoadingOverlay').trigger('loading-overlay:show');
                $.ajax({
                    type: 'POST',
                    url: '{{ path('ajax_winwheel_get_segments') }}',
                    dataType: 'json',
                    contentType: 'application/json; charset=UTF-8',
                    success: function(data){
                        //console.log(data);
                        theWheel = new Winwheel({
                            'numSegments'  : 12,     // Specify number of segments.
                            'outerRadius'  : 160,   // Set outer radius so wheel fits inside the background.
                            'textFontSize' : 14,    // Set font size as desired.
                            'textFontWeight': 'bold',
                            'textOrientation': 'horizontal',
                            'textMargin': 25,
                            'segments'     : data.segments,
                            'animation' :           // Specify the animation to use.
                                {
                                    'type'     : 'spinToStop',
                                    'duration' : 5,     // Duration in seconds.
                                    'spins'    : 15,    // Number of complete spins.
                                    'callbackFinished' : alertPrize
                                }
                        });
                        wheelSpinning = false;
                        $('#LoadingOverlay').trigger('loading-overlay:hide');
                    },
                    error: function(){
                        new PNotify({
                            title: 'Error!',
                            text: 'Something went wrong!',
                            type: 'error'
                        });
                        setTimeout(function(){ location.reload(true); }, 2000);
                    },
                    complete: function(){
                        // Finally callback
                    }
                });
            };

            var alertPrize = function(indicatedSegment) {

                var contents = '',
                    string = '';

                if(indicatedSegment.bonus > 0 || indicatedSegment.money > 0)
                {
                    string = 'Поздравляем! Вы выиграли ';
                    if(indicatedSegment.bonus > 0)
                    {
                        string = string + '<b>' + indicatedSegment.bonus + '</b> баллов на бонусный счёт!';
                    }
                    else
                    {
                        string = string + '<b>$' + indicatedSegment.money + '</b> на свой денежный счёт!';
                    }
                    contents = '<div class="modal-icon"><i class="fas fa-trophy"></i></div>' +
                        '<div class="modal-text"><p class="mb-0" id="modal-text">'+string+'</p></div>';
                }
                else if(indicatedSegment.cost > 0)
                {
                    string = '<h4 class="mt-0">Вы выиграли <b>СУПЕРПРИЗ - '+indicatedSegment.text+'!</b></h4>';
                    contents = '<div class="row">\n' +
                                '<div class="col-md-4"><img src="'+indicatedSegment.image+'" class="img-fluid mt-5" alt="'+indicatedSegment.text+'"/></div>\n' +
                                '<div class="col-md-8">'+string+indicatedSegment.description+'</div></div>';
                    $('#ModalContent').removeClass('modal-wrapper');
                }

                $('#ModalContent').html(contents);
                $.magnificPopup.open({
                    items: {
                        src: '#modalAnim'
                    },
                    type: 'inline',
                    fixedContentPos: false,
                    fixedBgPos: true,

                    overflowY: 'auto',

                    closeBtnInside: true,
                    preloader: false,

                    midClick: true,
                    removalDelay: 300,
                    mainClass: 'my-mfp-zoom-in',
                    modal: true
                });
            }

            var resetWheel  = function(){
                theWheel.stopAnimation(false);  // Stop the animation, false as param so does not call callback function
                theWheel.rotationAngle = 0;     // Reset the wheel angle to 0 degrees
                theWheel.draw();                // Call draw to render changes to the wheel
                wheelSpinning = false;          // Reset to false to power buttons and spin can be clicked again
            }

            $(function() {
                // On document loaded

                countdownInit('{{ next_spin }}');
                wheelInit();

                $('#spin-button').on('click', function(e){
                    e.preventDefault();
                    var $this = $(this);
                    if (wheelSpinning == false)
                    {
                        $this.val('Раскручиваем маховики...');
                        $.ajax({
                            type: 'POST',
                            url: '{{ path('ajax_winwheel_get_lucky_segment') }}',
                            //dataType: 'json',
                            contentType: 'application/json; charset=UTF-8',
                            success: function(data){
                                console.log(data);
                                if(typeof data != 'undefined' && data && data != 'ERROR')
                                {
                                    var segmentNumber = parseInt(data.segment);
                                    if(!isNaN(segmentNumber) && segmentNumber){
                                        var stopAt = theWheel.getRandomForSegment(segmentNumber);
                                        theWheel.animation.stopAngle = stopAt;
                                        theWheel.startAnimation();
                                        wheelSpinning = true;
                                        countdownInit(data.nextSpin);
                                        spinId = data.spinId;
                                    } else {
                                        // Handle error
                                        new PNotify({
                                            title: 'Error!',
                                            text: 'Something went wrong!',
                                            type: 'error'
                                        });
                                        setTimeout(function(){ location.reload(true); }, 2000);
                                    }
                                } else {
                                    // Handle error
                                    new PNotify({
                                        title: 'Error!',
                                        text: 'Already spinned!',
                                        type: 'error'
                                    });
                                    setTimeout(function(){ location.reload(true); }, 2000);
                                }
                            },
                            error: function(){
                                new PNotify({
                                    title: 'Error!',
                                    text: 'Something went wrong!',
                                    type: 'error'
                                });
                                setTimeout(function(){ location.reload(true); }, 2000);
                            },
                            complete: function(){
                                // Finally callback
                            }
                        });
                    }
                });

                /*
                Modal with CSS animation
                */
                $('.modal-with-zoom-anim').magnificPopup({
                    type: 'inline',

                    fixedContentPos: false,
                    fixedBgPos: true,

                    overflowY: 'auto',

                    closeBtnInside: true,
                    preloader: false,

                    midClick: true,
                    removalDelay: 300,
                    mainClass: 'my-mfp-zoom-in',
                    modal: true
                });

                /*
                Modal Reject
                */
                $(document).on('click', '.modal-dismiss', function (e) {
                    e.preventDefault();
                    $.ajax({
                        type: 'POST',
                        url: '{{ path('ajax_winwheel_reject_winnings') }}',
                        data: {spinId: spinId},
                        success: function(data){
                            console.log(data);
                            if(typeof data != 'undefined' && data)
                            {
                                if(data.success)
                                {
                                    // TODO: Any DOM manipulation e.g. add row in a list of winningst in widget
                                    new PNotify({
                                        title: 'Success!',
                                        text: 'Вы отказались от приза в розыгрыше #' + spinId,
                                        type: 'success'
                                    });
                                }
                                else
                                {
                                    // Handle error
                                    new PNotify({
                                        title: 'Error!',
                                        text: data.error + ': ' + data.message,
                                        type: 'error'
                                    });
                                }
                            } else {
                                // Handle error
                                new PNotify({
                                    title: 'Error!',
                                    text: 'Something went wrong!',
                                    type: 'error'
                                });
                            }
                        },
                        error: function(){
                            new PNotify({
                                title: 'Error!',
                                text: 'Something went wrong!',
                                type: 'error'
                            });
                        },
                        complete: function(){
                            // Finally callback
                            $.magnificPopup.close();
                        }
                    });
                });

                /*
                Modal Confirm
                */
                $(document).on('click', '.modal-confirm', function (e) {
                    e.preventDefault();

                    $.ajax({
                        type: 'POST',
                        url: '{{ path('ajax_winwheel_accept_winnings') }}',
                        data: {spinId: spinId},
                        success: function(data){
                            console.log(data);
                            if(typeof data !== 'undefined' && data)
                            {
                                if(data.success)
                                {
                                    // TODO: Any DOM manipulation e.g. add row in a list of winnings in some widget
                                    new PNotify({
                                        title: 'Success!',
                                        text: 'Вы успешно забрали свой приз в розыгрыше #' + spinId,
                                        type: 'success'
                                    });
                                }
                                else
                                {
                                    // Handle error
                                    new PNotify({
                                        title: 'Error!',
                                        text: data.error + ': ' + data.message,
                                        type: 'error'
                                    });
                                }
                            } else {
                                // Handle error
                                new PNotify({
                                    title: 'Error!',
                                    text: 'Something went wrong!',
                                    type: 'error'
                                });
                            }
                        },
                        error: function(){
                            new PNotify({
                                title: 'Error!',
                                text: 'Something went wrong!',
                                type: 'error'
                            });
                        },
                        complete: function(){
                            // Finally callback
                            $.magnificPopup.close();
                        }
                    });
                });
            });

        }).apply(this, [jQuery]);
    </script>
{% endblock %}